using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace NeuralNetPractice
{
    class NeuralNetwork
    {
        public static string Run()
        {
            //return run_cmd("cd \"c:\\Repos\\TensorFlowTest\"; ${env:PYTHONIOENCODING}='UTF-8'; ${env:PYTHONUNBUFFERED}='1'; & \"c:\\Repos\\TensorFlowTest\\.venv\\Scripts\\python.exe\" \"c:\\Users\\Boys64Bit\\.vscode\\extensions\\ms-python.python-2019.8.29288\\pythonFiles\\ptvsd_launcher.py\" '--default' '--client' '--host' 'localhost' '--port' '24805' \"c:\\Repos\\TensorFlowTest\\stockAnalystPredictor.py\"", "");
            return run_cmd("\"stockAnalystPredictorV2.py\"", "");

        }
        static string run_cmd(string cmd, string args)
        {
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = @"C:\Repos\TensorFlowTest\.venv\Scripts\python.exe";
            start.Arguments = string.Format("\"{0}\" \"{1}\"", cmd, args);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = false; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            using (Process process = Process.Start(start))
            {
                using (StreamReader reader = process.StandardOutput)
                {
                    //string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
                    //Console.WriteLine(stderr);
                    string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
                    return result;
                }
            }
        }
    }
}
